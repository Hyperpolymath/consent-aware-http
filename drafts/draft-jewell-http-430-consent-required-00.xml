<?xml version="1.0" encoding="UTF-8"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude"
     category="info"
     docName="draft-jewell-http-430-consent-required-00"
     ipr="trust200902"
     submissionType="independent"
     xml:lang="en"
     version="3"
     expiresDate="2026-01-14">

  <front>
    <title abbrev="Consent Required">HTTP Status Code 430: Consent Required</title>
    <seriesInfo name="Internet-Draft" value="draft-jewell-http-430-consent-required-00"/>
    <author fullname="Jonathan D.A. Jewell" initials="JDAJ" surname="Jewell">
      <organization>National Union of Journalists</organization>
      <address>
        <email>jonathan@metadatastician.art</email>
      </address>
    </author>
    <date year="2025" month="7" day="14"/>
    <abstract>
      <t>This document defines HTTP status code 430 (Consent Required), intended for use when access to a resource is denied due to the absence of a valid AI usage consent declaration. It supports machine-readable governance frameworks such as the AI Boundary Declaration Protocol, enabling declarative boundaries that prevent unauthorized indexing, training, or generative reuse of online content.</t>
    </abstract>
  </front>

  <middle>
    <section numbered="true" toc="default">
      <name>Introduction</name>
      <t>Current HTTP status codes such as 403 (Forbidden), 428 (Precondition Required), and 451 (Unavailable for Legal Reasons) do not adequately reflect denial scenarios based on missing or invalid AI consent declarations. As declarative perimeter protocols (e.g., <xref target="AIBDP"/>) become more prevalent, a distinct status code is required to denote procedural consent failure prior to content access.</t>
      <t>HTTP status code 430 (Consent Required) is proposed to signal that the requesting entity has failed to verify or respect the declared boundaries associated with AI ingestion, training, or derivative generation. This complements existing semantics defined in <xref target="RFC9110" sectionFormat="of" section="15.5.3"/> and expands ethical enforcement beyond legal constraints described in <xref target="RFC7725"/>.</t>
    </section>

    <section>
      <name>Definition</name>
      <t>Status Code: 430</t>
      <t>Phrase: Consent Required</t>
      <t>The server denies access because the client failed to verify or satisfy AI-specific consent declarations associated with the requested content. This denial applies in cases where a <tt>.well-known/aibdp.json</tt> manifest is present or expected, and no sufficient verification or compliance has occurred.</t>
    </section>

    <section>
      <name>Response Examples</name>
      <sourcecode type="http">
HTTP/1.1 430 Consent Required
Content-Type: application/json
Link: &lt;https://example.org/.well-known/aibdp.json&gt;; rel="blocked-by"
Retry-After: 86400

{
  "error": "Consent declaration missing or invalid.",
  "reference": "https://example.org/.well-known/aibdp.json"
}
      </sourcecode>
    </section>

    <section>
      <name>Use Cases</name>
      <ul>
        <li>AI crawlers and bots accessing content without checking for declarative usage terms</li>
        <li>Autonomous agents initiating training operations on hosted data without pre-verification</li>
        <li>Content Delivery Networks (CDNs) enforcing perimeter logic via manifest signals</li>
        <li>Infrastructure providers enabling rate-limiting or denial logic based on absence of consent</li>
      </ul>
    </section>

    <section>
      <name>Comparison to Existing Status Codes</name>
      <dl>
        <dt>403 (Forbidden)</dt>
        <dd>Generic denial; lacks boundary intent or procedural context.</dd>
        <dt>428 (Precondition Required)</dt>
        <dd>Designed for conditional requests; not consent-specific.</dd>
        <dt>451 (Unavailable for Legal Reasons)</dt>
        <dd>Legal enforcement only; not suited for declarative publisher-led refusals.</dd>
        <dt>430 (Consent Required)</dt>
        <dd>Represents non-legal, machine-readable perimeter logic. Expresses absence of verified permission, rather than technical or legal failure.</dd>
      </dl>
    </section>

    <section>
      <name>Security Considerations</name>
      <t>Use of 430 Consent Required does not reveal sensitive internal logic or compromise user data. It enforces publisher-defined AI boundaries while preserving public accessibility of the perimeter declaration. This status code supports structured denial without over-identification of request origin.</t>
    </section>

    <section>
      <name>IANA Considerations</name>
      <t>This document requests that IANA register the status code 430 (Consent Required) in the HTTP Status Code Registry.</t>
    </section>
  </middle>

  <back>
    <references>
      <name>Normative References</name>
      <reference anchor="RFC9110" target="https://www.rfc-editor.org/info/rfc9110">
        <front>
          <title>HTTP Semantics</title>
          <author>
            <organization>IETF</organization>
          </author>
          <date year="2022" month="6"/>
        </front>
        <seriesInfo name="RFC" value="9110"/>
      </reference>

      <reference anchor="AIBDP" target="https://datatracker.ietf.org/doc/draft-jewell-aibdp/">
        <front>
          <title>AI Boundary Declaration Protocol</title>
          <author fullname="Jonathan D.A. Jewell"/>
          <date year="2025"/>
        </front>
        <seriesInfo name="Internet-Draft" value="draft-jewell-aibdp-00"/>
      </reference>
    </references>

    <references>
      <name>Informative References</name>
      <reference anchor="RFC7725" target="https://www.rfc-editor.org/info/rfc7725">
        <front>
          <title>An HTTP Status Code to Report Legal Obstacles</title>
          <author>
            <organization>IETF</organization>
          </author>
          <date year="2016" month="2"/>
        </front>
        <seriesInfo name="RFC" value="7725"/>
      </reference>
    </references>

    <section>
      <name>Acknowledgements</name>
      <t>This proposal builds on ethical governance efforts in journalism, computing, and infrastructure architecture. Thanks to contributors from the NUJ, the IETF HTTPAPI and ART areas, and transparency coalitions engaging in boundary-aware standards formation.</t>
    </section>
  </back>
</rfc>
